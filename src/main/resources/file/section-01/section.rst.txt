内存故障
=========
Java的内存分为两类，一类是堆内内存，另外一类是堆外内存。

堆外内存指的是不受JVM虚拟机垃圾回收器管理的内存，这部分内存一般包括Metaspace，通过Unsafe分配的内存，JVM内部为虚拟机服务的内存以及用户JNI内部自行维护的内存（这些部分内存主要是通过c／cpp传统的new，malloc来分配的，值得注意的是JNI API提供了一些创建对象的API比如NewObject，NewObjectArray等，这些API创建的对象是不算在堆外的）等等。由于这部分内存不受JVM垃圾回收器的管理，如果使用方式不正确，很容易造成内存故障。

与堆外内存相对应的是堆内内存，堆内内存主要是指受到JVM虚拟机垃圾回收器管理的内存，主要包括Java程序中通过new关键字分配的对象，JNI方法通过JNI方法比如NewObject，NewObjectArray等方法创建的对象等等。这些对象被垃圾回收器管理，用户不需要显式得进行内存释放的操作，垃圾回收器根据一定的策略，发现堆内的内存不再被程序使用了，它会自动进行对象以及内存的清理。

内存故障是Java应用经常遇到的一类故障, 这类故障的表现多种多样，有的内存故障会造成GC异常，从而影响应用的响应时间和吞吐量，有的堆外泄漏直接引起OS的OOM Killer，还有的内存故障比如CodeCache则可能造成应用的CPU Load突然升高等等。

排查人员接到报警后，通过系统命令(top, tsar, jstat等)、查看gc日志、查看应用业务日志等手段可以快速识别这类故障，然后对故障进行归纳分类，从而进入本规范相应的条目进行排查。

在排查内存故障之前，排查人员需要对内存概念及知识点有正确认识，请参考相应章节 。排查流程当中也会有的链接进行跳转。

.. toctree::
    :maxdepth: 1
  
    subsection-01
    subsection-02
    subsection-03


